@startuml

skinparam stereotypeCBackgroundColor<<Exception>> Red
'hide stereotype

title Network Classes


namespace external_namespace_includes{
namespace rsp.logging {
    class Logger  {
    }
}

namespace rsp.json{
    class Json  {
    }
}

namespace rsp.utils{
    class Crc32  {
    }
    
    class CoreException <<Exception>> {
    }
}
}

namespace rsp.network {


    namespace rsp.network.exceptions {
        class HttpException <<Exception>> {
            Base class for all exceptions 
            in the network namespace
        }
    }

    namespace rsp.network.http {
        class ConnectionOptions{
            + string Url = "https://example.com"
            + uint32_t ConnectTimeOutMs = 5000
            + uint32_t TimeOutMs = 30000
            + string CertPath = "/"
            + string KeyPath = "/"
        }

        interface IHttpSession  {
            +GetDefaultOptions() : HttpRequestOptions
            +MakeRequest() : IHttpRequest&
            +MakeRequest(options:HttpRequestOptions) : IHttpRequest&
        }
        
        interface IHttpRequest {
            + GetOptions() : HttpRequestOptions&
            + Execute() : IHttpResponse&
            + Execute(callback:function<void(IHttpResponse&)>) : void
        }
        
        enum HttpRequestType {
            NONE,
            GET,
            POST
        }
		
		class HttpRequestOptions {
			+ map<string, string> Headers
			+ string Body
			+ HttpRequestType RequestType = HttpRequestType.NONE
			+ string BasicAuthUsername
			+ string BasicAuthPassword
		}


        class HttpSession  {
            + string Host
            + string BasePath
            --
            + HttpSession(host: string, basepath: string)
            + MakeRequest(URI: string, type: HttpRequestType=HttpRequestType.Get) : HttpRequest&
            + MakeRequest(URI: string, type: HttpRequestType=HttpRequestType.Post, body: string) : HttpRequest&
        }

        interface IHttpResponse{
            + GetStatusCode() : int
            + GetHeaders() : map<string, string>
            + GetRequest() : HttpRequest
            + GetBody() : string
        }

        class HttpResponse {
        }
        class HttpRequest {
        }

        namespace rsp.network.http.curl {
            
            class CurlHttpRequest{

            }            
            
            class LibCurl <<external>> {
            }
        }
    }
}



rsp.network.exceptions.HttpException -up-|> rsp.utils.CoreException

rsp.network.http.HttpRequestOptions -up-|>rsp.network.http.ConnectionOptions 
rsp.network.http.HttpRequestType --* rsp.network.http.HttpRequestOptions
rsp.network.http.HttpSession -up-|> rsp.network.http.IHttpSession 

rsp.network.http.HttpRequestOptions --* rsp.network.http.IHttpSession 
rsp.network.http.IHttpRequest --* rsp.network.http.IHttpSession

rsp.network.http.HttpResponse -up-|> rsp.network.http.IHttpResponse
rsp.network.http.HttpRequest -up-|> rsp.network.http.IHttpRequest

rsp.network.http.IHttpRequest --o rsp.network.http.HttpSession
rsp.network.http.HttpRequestOptions --* rsp.network.http.IHttpRequest 
rsp.network.http.HttpResponse -- rsp.network.http.IHttpRequest

rsp.network.http.curl.CurlHttpRequest --+ rsp.network.http.curl.LibCurl
rsp.network.http.curl.CurlHttpRequest -up-|> rsp.network.http.IHttpRequest
rsp.network.http.curl.CurlHttpRequest -up-* rsp.network.http.HttpRequest

@enduml